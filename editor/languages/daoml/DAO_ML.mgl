stylePath "DAO_ML.msl"

// TODO: add enumm-values to modelelement representations/style

@FileCodec(DaoMLFileCodecHandler)
@ValueProvider("DaoMLValueProvider")
@GeneratorAction("DaoMLGenerator")
graphModel DAO_Model {
    diagramExtension "dao"
    
    containableElements(
        DAO,
        Role,
        Committee,
        GovernanceArea,
        Permission
    )
    attr string as name = ""
    attr boolean as optimizedTranslation = True
}  

@ValueProvider("DaoMLValueProvider")
container DAO {
    style dao("${name}", "${missionStatement}")

    containableElements(
        Role, Committee, GovernanceArea, Permission
    )

    attr string as name = "New Dao"
    attr string as missionStatement = ""
    @hidden
    attr boolean as hierarchicalInheritance = false // TODO: ask suwelu on implications
}

@ValueProvider("DaoMLValueProvider")
container GovernanceArea {
    style governanceArea("${description}", "${implementation}")
    containableElements(
        Permission
    )
    attr string as description = "New Governance Area"
    attr GovernanceAreaImplementation as implementation
}

@disable(resize)
@ValueProvider("DaoMLValueProvider")
node Role {
    style role("${name}", "${agentType}")

    incomingEdges(AggregationRole, IsControlledBy)
    outgoingEdges(Association, Federation, AggregationRole, IsControlledBy)

    attr string as name = "New Role"
    attr AgentType as agentType
    @hidden
    attr number as aggregationLevel = 0
    @hidden
    attr number as federationLevel = 0
    attr string as assignmentMethod = "" // injected code
    attr number as agentMin = 0
    attr number as agentMax = 0
}

@disable(resize)
@ValueProvider("DaoMLValueProvider")
node Committee {
    style committee("${description}", "${decisionMakingMethod}")

    incomingEdges(Federation, AggregationCommittee, IsControlledBy)
    outgoingEdges(Association, Federation, AggregationCommittee, IsControlledBy)
    // TODO: No Reflexiv Federation

    attr string as description = "New Committee" // committee name
    @hidden
    attr number as aggregationLevel = 0
    @hidden
    attr number as federationLevel = 0
    attr CommitteeDecisionMakingMethod as decisionMakingMethod // injected code
    attr string as customDecisionMakingMethod // used when CustomProtocol is set
    attr string as votingCondition = "" // need validation
    attr string as proposalCondition = "" // need validation
}

@disable(resize)
@ValueProvider("DaoMLValueProvider")
node Permission {
    style permission("${allowedAction}", "${permissionType}")

    incomingEdges(Association)
    outgoingEdges()
    
    attr string as allowedAction = "New Permission" // allowed action
    attr PermissionType as permissionType
}

enum GovernanceAreaImplementation {
    OnChain
    Hybrid
    OffChain
}

enum AgentType {
    Human
    Autonomous
}

enum CommitteeDecisionMakingMethod {
    CustomProtocol // will be mapped to "blank"
    SimpleMajority
    LazyConsensus
    QuadraticVoting
    OptimisticGovernance
}

enum PermissionType {
    Operational
    Structural
    Strategic
}

enum RefGovArea { // TODO
    GroupMembership
    TreasuryManagement
    DAOUpgrades
    ServiceProvision
}

edge Association {
    style association
}

edge Federation {
    style federation
}

edge AggregationCommittee extends Aggregation{
    style aggregation
}

edge AggregationRole extends Aggregation {
    style aggregation
}

abstract edge Aggregation {
}

edge IsControlledBy {
    style isControlledBy
}
