apiVersion: v1
kind: ConfigMap
metadata:
  name: main-config
  namespace: default
data:
  DATABASE_URL: "postgres-service/cc"
  DATABASE_USER: "cc"
  DATABASE_PASSWORD: "cc"
  AMPQ_HOST: "ampq-service"
  AMPQ_PORT: "5672"
  AMPQ_USERNAME: "cc"
  AMPQ_PASSWORD: "cc"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: main-deployment
  namespace: default
  labels:
    app: main
spec:
  replicas: 1
  selector:
    matchLabels:
      app: main
  template:
    metadata:
      labels:
        app: main
    spec:
      serviceAccountName: main-sa
      containers:
        - name: main
          image: {{ .Values.mainImage }}
          imagePullPolicy: {{ .Values.imageConfig.pullPolicy }}
          ports:
            - containerPort: 8000
            - containerPort: 9000
          envFrom:
            - configMapRef:
                name: main-config
          securityContext:
            privileged: true
---
apiVersion: v1
kind: Service
metadata:
  name: main-service
  namespace: default
  labels:
    app: main
spec:
  ports:
    - port: 8000
      name: main
      protocol: TCP
    - port: 9000
      name: main-grpc
      protocol: TCP
  type: NodePort
  selector:
    app: main
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  namespace: default
  name: main-role
rules:
  - apiGroups: [""]
    resources: ["pods", "endpoints", "ingresses", "ingress", "deployments", "services", "configmaps", "statefulsets", "persistentvolumes", "persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["apps"]
    resources: ["deployments", "statefulsets"]
    verbs: [ "get", "list", "watch", "create", "update", "patch", "delete" ]
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingresses", "ingress"]
    verbs: [ "get", "list", "watch", "create", "update", "patch", "delete" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: main
  namespace: default
subjects:
  - kind: ServiceAccount
    namespace: default
    name: main-sa
roleRef:
  kind: ClusterRole
  name: main-role
  apiGroup: "rbac.authorization.k8s.io"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: main-sa
