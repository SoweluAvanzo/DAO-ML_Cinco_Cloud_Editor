apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: registry-statefulset
  namespace: {{ .Values.namespace }}
  labels:
    app: registry
spec:
  serviceName: registry
  replicas: 1
  selector:
    matchLabels:
      app: registry
  template:
    metadata:
      labels:
        app: registry
    spec:
      containers:
        - name: registry
          image: {{ .Values.registryImage }}
          imagePullPolicy: {{ .Values.imageConfig.pullPolicy }}
          ports:
            - containerPort: 5000
            - containerPort: 8000
          volumeMounts:
            - name: pv-data
              mountPath: /var/lib/registry
          securityContext:
            privileged: true
      volumes:
        - name: pv-data
          persistentVolumeClaim:
            claimName: registry-pv-claim
      imagePullSecrets:
        - name: {{ .Values.registries.cincocloud.secret.name }}
---
apiVersion: v1
kind: Service
metadata:
  name: registry-service
  namespace: {{ .Values.namespace }}
  labels:
    app: registry
spec:
  ports:
    - port: 5000
      name: registry
      protocol: TCP
    - port: 8000
      name: registry-api
      protocol: TCP
  {{ if eq .Values.serverTier "local" }}
  type: NodePort
  {{- else -}}
  type: ClusterIP
  {{- end }}
  selector:
    app: registry
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: registry-pv-volume
  namespace: {{ .Values.namespace }}
  labels:
    type: local
    app: registry
spec:
  storageClassName: manual
  capacity:
    storage: 30Gi
  claimRef:
    namespace: {{ .Values.namespace }}
    name: registry-pv-claim
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/mnt/data/registry"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: registry-pv-claim
  namespace: {{ .Values.namespace }}
  labels:
    app: registry
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 30Gi
