.docker-job:
  image: docker:20.10.6
  services:
    - docker:20.10.6-dind
  variables:
    DOCKER_DRIVER: overlay

.maven-job:
  image: maven:latest
  services:
    - docker:20.10.6-dind
  cache:
    paths:
      - .m2/repository
  variables:
    MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository"
    DOCKER_HOST: "tcp://docker:2375"
    DOCKER_TLS_CERTDIR: ""
    DOCKER_DRIVER: overlay2

.docker-build:
  extends: .docker-job
  script:
    - mkdir "$IMAGE-$VERSION"
    - docker build -t "$CI_REGISTRY_IMAGE/$IMAGE:$VERSION" -f "$DOCKERFILE" "$CONTEXT"
    - docker save "$CI_REGISTRY_IMAGE/$IMAGE:$VERSION" | gzip > "$IMAGE-$VERSION/image.tar.gz"
  artifacts:
    expire_in: 1 days
    paths:
      - $IMAGE-$VERSION/image.tar.gz

.deploy-job:
  image:
    name: gcr.io/k8s-skaffold/skaffold:v1.27.0
  script:
    - kubectl config set-cluster ls5vs024-cluster --server=https://129.217.27.124:16443
    - kubectl config set clusters.ls5vs024-cluster.certificate-authority-data $CLUSTER_CERT
    - kubectl config set-credentials ls5vs024-admin --token=$CLUSTER_USER_TOKEN
    - kubectl config set-context ls5vs024 --user=ls5vs024-admin --cluster=ls5vs024-cluster
    - kubectl config use-context ls5vs024
    - kubectl config get-contexts
    - echo "$PROFILE, $NAMESPACE, $TAG"
    - skaffold deploy -p $PROFILE -n $NAMESPACE -t $TAG --status-check=true

build-wiki:
  image: 'node:12.18.4'
  cache:
    paths:
      - docs/vuepress/node_modules/
  script:
    - cd docs/vuepress
    - rm src/.vuepress/env.default.js
    - mv src/.vuepress/env.prod.js src/.vuepress/env.default.js
    - npm install
    - npm run build
  only:
    - main
  artifacts:
    paths:
      - docs/vuepress/src/.vuepress/dist/*
    expire_in: 1 day

lint-main-backend:
  extends: .maven-job
  script:
    - cd services/main/backend
    - mvn checkstyle:check

build-main:
  extends: .docker-build
  needs:
    - lint-main-backend
  variables:
    CONTEXT: ./services
    DOCKERFILE: ./services/main/Dockerfile
    IMAGE: main
    VERSION: latest
  only:
    - main

build-registry:
  extends: .docker-build
  variables:
    CONTEXT: ./services/registry
    DOCKERFILE: ./services/registry/Dockerfile
    IMAGE: registry
    VERSION: latest
  only:
    - main

lint-workspace-builder-backend:
  extends: .maven-job
  script:
    - cd services/workspace-builder
    - mvn checkstyle:check

build-workspace-builder:
  extends: .docker-build
  needs:
    - lint-workspace-builder-backend
  variables:
    CONTEXT: ./services
    DOCKERFILE: ./services/workspace-builder/Dockerfile
    IMAGE: workspace-builder
    VERSION: latest
  only:
    - main

push-images:
  extends: .docker-job
  needs:
    - build-main
    - build-registry
    - build-workspace-builder
  script:
    - docker login --username $CI_REGISTRY_USER --password $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker load < main-latest/image.tar.gz
    - docker tag $CI_REGISTRY_IMAGE/main:latest $CI_REGISTRY_IMAGE/main:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE/main:latest
    - docker push $CI_REGISTRY_IMAGE/main:$CI_COMMIT_SHA
    - docker load < registry-latest/image.tar.gz
    - docker tag $CI_REGISTRY_IMAGE/registry:latest $CI_REGISTRY_IMAGE/registry:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE/registry:latest
    - docker push $CI_REGISTRY_IMAGE/registry:$CI_COMMIT_SHA
    - docker load < workspace-builder-latest/image.tar.gz
    - docker tag $CI_REGISTRY_IMAGE/workspace-builder:latest $CI_REGISTRY_IMAGE/workspace-builder:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE/workspace-builder:latest
    - docker push $CI_REGISTRY_IMAGE/workspace-builder:$CI_COMMIT_SHA
  only:
    - main

pages:
  needs:
    - build-wiki
    - push-images
  image: 'node:12.18.4'
  script:
    - mkdir public
    - mv docs/vuepress/src/.vuepress/dist/* public/
  artifacts:
    paths:
      - public
    expire_in: 1 day
  only:
    - main

deploy-testing:
  extends: .deploy-job
  needs:
    - push-images
  variables:
    PROFILE: ls5vs024
    NAMESPACE: default
    TAG: $CI_COMMIT_SHA
  only:
    - main
