stylePath "layout.msl"

/*
 * Layout-Annotation Test
 */

@Hook("LayoutHooks", CanLayout, PreLayout, PostLayout)
@layout('{
    "elk.algorithm": "layered",
    "elk.direction": "RIGHT",
    "elk.layered.spacing.baseValue": 50
}')
graphModel LayoutTest {
	diagramExtension "layout"
	containableElements(*)
}

@layout('{
    "elk.algorithm": "random",
    "elk.spacing.nodeNode": 50
}')
container ElkRandomLayoutContainer {
    style purpleTextRectangle("ElkRandomLayoutContainer")
    containableElements(*)
}

/*
 Note:
 Disabling resizing can produce layout artifacts.
 Elk does not have a default option to disable resizing, as this depends on the algorithm.

 In this example, the elk-layouter resizes the element, but afterward, the size
 of the node is reset to its original state.

 If you want to completely disable resizing, you need to specify a layout algorithm 
 that supports it and combine it with @disable(resize).
*/
@layout('{
    "elk.algorithm": "random",
    "elk.spacing.nodeNode": 50
}')
@disable(resize)
container ElkRandomLayoutFixedSizeContainer {
    style purpleTextRectangle("ElkRandomLayoutFixedSizeContainer")
    containableElements(*)
}

@layout('{
    "elk.algorithm": "layered",
    "elk.layered.spacing.nodeNode": 50,
    "cycleBreaking.strategy": "INTERACTIVE",
    "layering.strategy": "INTERACTIVE"
}')
container ElkLayeredLayoutContainer {
    style purpleTextRectangle("ElkLayeredLayoutContainer")
    containableElements(*)
}

/*
 * Predefined Test
 */

@layout('random')
container Random_Layout_Container {
    style purpleTextRectangle("Random_Layout_Container")
    containableElements(*)
}

@layout('layered')
container Layered_Layout_Container {
    style purpleTextRectangle("Layered_Layout_Container")
    containableElements(*)
}

/*
 * Provider Test
 */

@LayoutOptionsProvider("ExampleLayoutOptionsProvider")
container LayoutOptionsProviderTest {
    style purpleTextRectangle("LayoutOptionsProviderTest")
    containableElements(*)
}

/*
 * Containments and disable test
 */

node SomeNode {
    style blueTextRectangle("Node")
	incomingEdges ({Transition}[1,*])
	outgoingEdges ({Transition}[1,*])
}

@disable(layout)
node NotLayoutNode {
    style blueTextRectangle("Node")
	incomingEdges ({Transition}[1,*])
	outgoingEdges ({Transition}[1,*])
}

@disable(select)
node NotSelectableNode {
    style blueTextRectangle("NotSelectableNode")
	incomingEdges ({Transition}[1,*])
	outgoingEdges ({Transition}[1,*])
}

@disable(move)
node NotMovableNode {
    style blueTextRectangle("NotMovableNode")
	incomingEdges ({Transition}[1,*])
	outgoingEdges ({Transition}[1,*])
}

edge Transition {
	style simpleArrow
}

